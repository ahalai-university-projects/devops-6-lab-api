name: Deploy to Dev

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Docker Image
        run: docker build . -t andriihalai/admin-panel-api:latest -f Dockerfile
      - name: Run Tests in Docker
        run: docker run -e CI=true --rm andriihalai/admin-panel-api:latest npm test
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker Image
        run: docker push andriihalai/admin-panel-api:latest




      # - name: Extract Docker image metadata
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: andriihalai/admin-panel-api
      # - name: Build Docker images
      #   run: docker build . -t andriihalai/admin-panel-api:latest -f Dockerfile
      # - name: Run tests
      #   run: docker run -e CI=true --rm andriihalai/admin-panel-api:latest npm test
      # - name: Echo success message
      #   run: echo "Build and test completed successfully!"
      
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ vars.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: '18'
      
  # run_test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #     - run: npm install
  #     - run: npm test
  #     - name: Cache node_modules
  #       uses: actions/cache@v3
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
  #     - name: Save build artifacts
  #       run: npm run build
  #     - name: Upload dist
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: dist
  #         path: dist/

  # build_and_deploy:
  #   runs-on: ubuntu-latest
  #   needs: run_test
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #     - name: Download dist
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: dist
  #         path: dist/
  #     - name: Deploy to Dev environment
  #       run: |
  #         echo "Deploying using downloaded dist..."
